generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  profile    Profile?
  isVarified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Profile {
  id              String          @id @default(uuid())
  bio             String?
  profileCategory ProfileCategory
  userId          String          @unique
  user            Users           @relation(fields: [userId], references: [id])
}

enum ProfileCategory {
  Event
  Club
  Automotive
  Aviation
  Marine
  Beauty
  Commercial
  Education
  Financial
  Restaurant
  Professional
  Advertising
  Science
  Sports
  Travel
  Influencer
  Musician
  Journalist
  Entrepreneur
  Community
}

model Notifications {
  id        String            @id @default(uuid())
  userId    String
  content   String            @unique
  type      NotificationsType
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now())
}

enum NotificationsType {
  user
  system
}

model Messages {
  id        String   @id @default(uuid())
  sender    String
  reciever  String
  content   String
  isSeen    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Tweet {
  id        String   @id @default(uuid())
  content   String
  userId    String
  isSeen    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Like {
  id        String   @id @default(uuid())
  tweetId   String?
  commentId String?
  likeType  LikeType
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

enum LikeType {
  tweetId
  commentId
}

model Retweet {
  id             String   @id @default(uuid())
  tweetId        String
  orignalOwnerId String
  retweetUserId  String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}

model Comments {
  id        String   @id @default(uuid())
  tweetId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
